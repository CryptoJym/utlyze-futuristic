name: quality

on:
  push:
    branches: ["**"]
  pull_request:

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Lighthouse CI (core pages)
        continue-on-error: true
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:4010/
            http://localhost:4010/roi/
            http://localhost:4010/pricing/
            http://localhost:4010/about/
            http://localhost:4010/resources/
            http://localhost:4010/agents/
            http://localhost:4010/studio/
            http://localhost:4010/contact/
          runs: 1
          uploadArtifacts: true
          temporaryPublicStorage: true
          startServerCommand: python3 -m http.server 4010
          startServerReadyPattern: "Serving HTTP on"
          assertions: 'off'

      - name: Lighthouse CI (use-cases)
        continue-on-error: true
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:4010/use-cases/
            http://localhost:4010/use-cases/customer-support-automation/
            http://localhost:4010/use-cases/accounts-receivable-collections/
            http://localhost:4010/use-cases/executive-outbound-sdr/
            http://localhost:4010/use-cases/rfp-proposal-response/
            http://localhost:4010/use-cases/it-helpdesk-employee-support/
            http://localhost:4010/use-cases/legal-contract-review/
            http://localhost:4010/use-cases/healthcare-prior-authorization/
            http://localhost:4010/use-cases/financial-risk-assessment/
            http://localhost:4010/use-cases/sales-lead-qualification/
            http://localhost:4010/use-cases/hr-candidate-screening/
            http://localhost:4010/use-cases/manufacturing-quality-control/
            http://localhost:4010/use-cases/retail-inventory-optimization/
            http://localhost:4010/use-cases/content-creation-pipeline/
            http://localhost:4010/use-cases/insurance-claims-processing/
            http://localhost:4010/use-cases/real-estate-property-analysis/
            http://localhost:4010/use-cases/educational-content-personalization/
          runs: 1
          uploadArtifacts: true
          temporaryPublicStorage: true
          startServerCommand: python3 -m http.server 4010
          startServerReadyPattern: "Serving HTTP on"
          assertions: 'off'

  a11y:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Start static server
        run: |
          nohup python3 -m http.server 4020 >/dev/null 2>&1 &
          sleep 1

      - name: Run pa11y-ci (summary)
        run: npx -y pa11y-ci --config ./pa11y-ci.json || true

      - name: Run pa11y-ci (json report)
        run: npx -y pa11y-ci --config ./pa11y-ci.json --json > pa11y-report.json || true

      - name: Upload pa11y report
        uses: actions/upload-artifact@v4
        with:
          name: pa11y-report
          path: pa11y-report.json

      - name: Comment pa11y summary on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'pa11y-report.json';
            if (!fs.existsSync(path)) {
              core.warning('pa11y-report.json not found');
              return;
            }
            const data = JSON.parse(fs.readFileSync(path, 'utf8'));
            let total = 0, withIssues = 0;
            let lines = [];
            for (const r of data) {
              total++;
              const errs = (r.issues || []).filter(i => i.type === 'error');
              if (errs.length > 0) {
                withIssues++;
                lines.push(`- ❌ ${r.url} — ${errs.length} errors`);
              } else {
                lines.push(`- ✅ ${r.url}`);
              }
            }
            const header = withIssues === 0
              ? `✅ Pa11y: ${total}/${total} URLs passed (WCAG2AA)`
              : `❌ Pa11y: ${total-withIssues}/${total} URLs passed (WCAG2AA)`;
            const body = [header, '', ...lines].join('\n');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
